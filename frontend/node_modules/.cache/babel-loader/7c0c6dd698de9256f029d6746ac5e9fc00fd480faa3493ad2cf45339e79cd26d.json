{"ast":null,"code":"var _jsxFileName = \"/home/kinyuy/toDoListApp/frontend/src/index.js\";\nimport React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport AddTask from './components/tasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nalert(\"i am here\");\nconst toggleButton = document.querySelector('.toggle-button');\nconst navbarLinks = document.querySelector('.navbar-links');\ndocument.getElementById('apiButton').addEventListener('click', () => {\n  if (AddTask()) {\n    alert(\"Api clicked\");\n  } else {\n    alert(\"nope we are not there yet\");\n  }\n});\ntoggleButton.addEventListener('click', () => {\n  navbarLinks.classList.toggle('active');\n});\ndocument.addEventListener('alpine:init', () => {\n  Alpine.data('menu', () => ({\n    open: false,\n    toggle() {\n      this.open = !this.open;\n    }\n  }));\n});\nlet lastScrollTop = 0;\nconst navbar = document.getElementById('navbar');\nwindow.addEventListener('scroll', () => {\n  let scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n  if (scrollTop > lastScrollTop) {\n    // Scroll down\n    navbar.classList.add('hidden-nav');\n  } else {\n    // Scroll up\n    navbar.classList.remove('hidden-nav');\n  }\n  lastScrollTop = scrollTop;\n});\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","AddTask","jsxDEV","_jsxDEV","alert","toggleButton","document","querySelector","navbarLinks","getElementById","addEventListener","classList","toggle","Alpine","data","open","lastScrollTop","navbar","window","scrollTop","pageYOffset","documentElement","add","remove","render","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/kinyuy/toDoListApp/frontend/src/index.js"],"sourcesContent":["import React from 'react';\n// import ReactDOM from 'react-dom/client';\nimport ReactDOM from 'react-dom'\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport AddTask from './components/tasks';\n\nalert(\"i am here\");\n\nconst toggleButton = document.querySelector('.toggle-button');\nconst navbarLinks = document.querySelector('.navbar-links');\n\ndocument.getElementById('apiButton').addEventListener('click', () => {\n    if (AddTask()) {\n        alert(\"Api clicked\");\n    } else {\n        alert(\"nope we are not there yet\")\n    } \n});\n\n\ntoggleButton.addEventListener('click', () => {\n    navbarLinks.classList.toggle('active');\n});\n\ndocument.addEventListener('alpine:init', () => {\n  Alpine.data('menu', () => ({\n      open: false,\n      toggle() {\n          this.open = !this.open;\n      }\n  }));\n});\n\nlet lastScrollTop = 0;\nconst navbar = document.getElementById('navbar');\n\nwindow.addEventListener('scroll', () => {\n    let scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n\n    if (scrollTop > lastScrollTop) {\n        // Scroll down\n        navbar.classList.add('hidden-nav');\n    } else {\n        // Scroll up\n        navbar.classList.remove('hidden-nav');\n    }\n    lastScrollTop = scrollTop;\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB;AACA,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzCC,KAAK,CAAC,WAAW,CAAC;AAElB,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;AAC7D,MAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAE3DD,QAAQ,CAACG,cAAc,CAAC,WAAW,CAAC,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACjE,IAAIT,OAAO,CAAC,CAAC,EAAE;IACXG,KAAK,CAAC,aAAa,CAAC;EACxB,CAAC,MAAM;IACHA,KAAK,CAAC,2BAA2B,CAAC;EACtC;AACJ,CAAC,CAAC;AAGFC,YAAY,CAACK,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACzCF,WAAW,CAACG,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;AAC1C,CAAC,CAAC;AAEFN,QAAQ,CAACI,gBAAgB,CAAC,aAAa,EAAE,MAAM;EAC7CG,MAAM,CAACC,IAAI,CAAC,MAAM,EAAE,OAAO;IACvBC,IAAI,EAAE,KAAK;IACXH,MAAMA,CAAA,EAAG;MACL,IAAI,CAACG,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IAC1B;EACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,IAAIC,aAAa,GAAG,CAAC;AACrB,MAAMC,MAAM,GAAGX,QAAQ,CAACG,cAAc,CAAC,QAAQ,CAAC;AAEhDS,MAAM,CAACR,gBAAgB,CAAC,QAAQ,EAAE,MAAM;EACpC,IAAIS,SAAS,GAAGD,MAAM,CAACE,WAAW,IAAId,QAAQ,CAACe,eAAe,CAACF,SAAS;EAExE,IAAIA,SAAS,GAAGH,aAAa,EAAE;IAC3B;IACAC,MAAM,CAACN,SAAS,CAACW,GAAG,CAAC,YAAY,CAAC;EACtC,CAAC,MAAM;IACH;IACAL,MAAM,CAACN,SAAS,CAACY,MAAM,CAAC,YAAY,CAAC;EACzC;EACAP,aAAa,GAAGG,SAAS;AAC7B,CAAC,CAAC;AAEFpB,QAAQ,CAACyB,MAAM,cAACrB,OAAA,CAACH,GAAG;EAAAyB,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAE,CAAC,EAAEtB,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEzD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}