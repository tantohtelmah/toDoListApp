{"ast":null,"code":"var _jsxFileName = \"/home/kinyuy/toDoListApp/frontend/src/components/users.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddUser = () => {\n  _s();\n  const [email, setName] = useState('');\n  const [password, setTitle] = useState('');\n  const [first_name, setDescription] = useState('');\n  const [last_name, setDueDate] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prevUser => ({\n      ...prevUser,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(\"Handling...\");\n    if (!email || password || first_name || last_name) {\n      alert('Please fill in all required fields.');\n      return;\n    }\n    const data = {\n      email,\n      password,\n      first_name,\n      last_name\n    };\n    await axios.post('http://localhost:5000/user/add', data, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: user.email,\n      onChange: handleChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: user.password,\n      onChange: handleChange,\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"first_name\",\n      value: user.first_name,\n      onChange: handleChange,\n      placeholder: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"last_name\",\n      value: user.last_name,\n      onChange: handleChange,\n      placeholder: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AddUser, \"iI2QATObzApELZqhYA9amNy4TJc=\");\n_c = AddUser;\nexport default AddUser;\nvar _c;\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","AddUser","_s","email","setName","password","setTitle","first_name","setDescription","last_name","setDueDate","handleChange","e","name","value","target","setUser","prevUser","handleSubmit","preventDefault","console","log","alert","data","post","method","headers","body","JSON","stringify","user","then","response","json","catch","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/home/kinyuy/toDoListApp/frontend/src/components/users.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\n\nconst AddUser = () => {\n    const [email, setName] = useState('');\n    const [password, setTitle] = useState('');\n    const [first_name, setDescription] = useState('');\n    const [last_name, setDueDate] = useState('');\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setUser(prevUser => ({ ...prevUser, [name]: value }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(\"Handling...\")\n      if (!email || password || first_name || last_name) {\n        alert('Please fill in all required fields.');\n        return;\n      }\n      const data = { email, password, first_name, last_name };\n    await axios.post('http://localhost:5000/user/add', data, {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user),\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log('Success:', data);\n      })\n      .catch((error) => {\n        console.error('Error:', error);\n      });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Add User</h1>\n      <input type=\"email\" name=\"email\" value={user.email} onChange={handleChange} placeholder=\"Email\" />\n      <input type=\"password\" name=\"password\" value={user.password} onChange={handleChange} placeholder=\"Password\" />\n      <input type=\"text\" name=\"first_name\" value={user.first_name} onChange={handleChange} placeholder=\"First Name\" />\n      <input type=\"text\" name=\"last_name\" value={user.last_name} onChange={handleChange} placeholder=\"Last Name\" />\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default AddUser;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}