{"ast":null,"code":"// src/components/AddTask.js\n// import React, { useState } from 'react';\n// import { Navigate, useNavigate } from 'react-router-dom';\n\n// function AddTask() {\n//   const [name, setName] = useState('');\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [dueDate, setDueDate] = useState('');\n//   const [status, setStatus] = useState('pending');\n//   const history = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       const data = { name, title, description, due_date: dueDate, status };\n\n//       const response = await fetch('/tasks/add', {\n//           method: 'POST',\n//           headers: {\n//               'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//           Navigate('/path');\n//           alert('Task added successfully!');\n//       } else {\n//         alert('Failed to add task.');\n//       }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Add Task</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <label>Name:</label><br />\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required /><br />\n//                 <label>Title:</label><br />\n//                 <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required /><br />\n//                 <label>Description:</label><br />\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required /><br />\n//                 <label>Due Date:</label><br />\n//                 <input type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} /><br />\n//                 <label>Status:</label><br />\n//                 <input type=\"text\" value={status} onChange={(e) => setStatus(e.target.value)} /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default AddTask;\n\ndocument.getElementById('task-form').addEventListener('submit', async e => {\n  e.preventDefault();\n  const data = {\n    name: document.getElementById('name').value,\n    title: document.getElementById('title').value,\n    description: document.getElementById('description').value,\n    due_date: document.getElementById('due_date').value,\n    status: document.getElementById('status').value\n  };\n  const response = await fetch('/tasks/add', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n  if (response.ok) {\n    alert('Task added successfully!');\n    window.location.href = '/';\n  } else {\n    alert('Error adding task');\n  }\n});","map":{"version":3,"names":["document","getElementById","addEventListener","e","preventDefault","data","name","value","title","description","due_date","status","response","fetch","method","headers","body","JSON","stringify","ok","alert","window","location","href"],"sources":["/home/kinyuy/toDoListApp/frontend/src/components/tasks.js"],"sourcesContent":["// src/components/AddTask.js\n// import React, { useState } from 'react';\n// import { Navigate, useNavigate } from 'react-router-dom';\n\n// function AddTask() {\n//   const [name, setName] = useState('');\n//   const [title, setTitle] = useState('');\n//   const [description, setDescription] = useState('');\n//   const [dueDate, setDueDate] = useState('');\n//   const [status, setStatus] = useState('pending');\n//   const history = useNavigate();\n\n//   const handleSubmit = async (e) => {\n//       e.preventDefault();\n//       const data = { name, title, description, due_date: dueDate, status };\n\n//       const response = await fetch('/tasks/add', {\n//           method: 'POST',\n//           headers: {\n//               'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify(data),\n//       });\n\n//       if (response.ok) {\n//           Navigate('/path');\n//           alert('Task added successfully!');\n//       } else {\n//         alert('Failed to add task.');\n//       }\n//     };\n\n//     return (\n//         <div>\n//             <h1>Add Task</h1>\n//             <form onSubmit={handleSubmit}>\n//                 <label>Name:</label><br />\n//                 <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required /><br />\n//                 <label>Title:</label><br />\n//                 <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} required /><br />\n//                 <label>Description:</label><br />\n//                 <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} required /><br />\n//                 <label>Due Date:</label><br />\n//                 <input type=\"date\" value={dueDate} onChange={(e) => setDueDate(e.target.value)} /><br />\n//                 <label>Status:</label><br />\n//                 <input type=\"text\" value={status} onChange={(e) => setStatus(e.target.value)} /><br /><br />\n//                 <button type=\"submit\">Submit</button>\n//             </form>\n//         </div>\n//     );\n// }\n\n// export default AddTask;\n\ndocument.getElementById('task-form').addEventListener('submit', async (e) => {\n  e.preventDefault();\n  \n  const data = {\n      name: document.getElementById('name').value,\n      title: document.getElementById('title').value,\n      description: document.getElementById('description').value,\n      due_date: document.getElementById('due_date').value,\n      status: document.getElementById('status').value\n  };\n\n  const response = await fetch('/tasks/add', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n  });\n\n  if (response.ok) {\n      alert('Task added successfully!');\n      window.location.href = '/';\n  } else {\n      alert('Error adding task');\n  }\n});\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEAA,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,gBAAgB,CAAC,QAAQ,EAAE,MAAOC,CAAC,IAAK;EAC3EA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,MAAMC,IAAI,GAAG;IACTC,IAAI,EAAEN,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAACM,KAAK;IAC3CC,KAAK,EAAER,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACM,KAAK;IAC7CE,WAAW,EAAET,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACM,KAAK;IACzDG,QAAQ,EAAEV,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACM,KAAK;IACnDI,MAAM,EAAEX,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACM;EAC9C,CAAC;EAED,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;IACvCC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACb,IAAI;EAC7B,CAAC,CAAC;EAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;IACbC,KAAK,CAAC,0BAA0B,CAAC;IACjCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;EAC9B,CAAC,MAAM;IACHH,KAAK,CAAC,mBAAmB,CAAC;EAC9B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}