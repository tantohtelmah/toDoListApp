{"ast":null,"code":"var _jsxFileName = \"/home/kinyuy/toDoListApp/frontend/src/pages/task_list.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const {\n    lastName\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  var tasksCounter = 0;\n  useEffect(() => {\n    const fetchTasks = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(`/tasks/all`);\n        const data = await response.json();\n        setTasks(data);\n        tasksCounter++;\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [lastName]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col max-w-md mx-auto bg-gray-500 rounded-xl shadow-md overflow-hidden md:max-w-2xl m-8 p-10 mt-2 h-1/2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-white font-bold\",\n      children: [\"Task List for \", lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"text-white\",\n        children: [\" \", tasksCounter, \".\", task.title, \": \", task.description]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(TaskList, \"PSnM/v4xJTJq7EyrzH/o4Nn/QR8=\", false, function () {\n  return [useParams];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","TaskList","_s","lastName","tasks","setTasks","isLoading","setIsLoading","error","setError","tasksCounter","fetchTasks","response","fetch","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","task","title","description","id","_c","$RefreshReg$"],"sources":["/home/kinyuy/toDoListApp/frontend/src/pages/task_list.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction TaskList() {\n    const { lastName } = useParams();\n    const [tasks, setTasks] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    var tasksCounter = 0;\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            setIsLoading(true);\n            try {\n                const response = await fetch(`/tasks/all`);\n                const data = await response.json();\n                setTasks(data);\n                tasksCounter++\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchTasks();\n    }, [lastName]);\n\n    if (isLoading) return <div>Loading...</div>;\n    if (error) return <div>Error: {error}</div>;\n\n    return (\n        <div className='flex flex-col max-w-md mx-auto bg-gray-500 rounded-xl shadow-md overflow-hidden md:max-w-2xl m-8 p-10 mt-2 h-1/2'>\n            <h1 className='text-white font-bold'>Task List for {lastName}</h1>\n            <ul>\n                {tasks.map(task => (\n                    <li className='text-white' key={task.id}> {tasksCounter}.{task.title}: {task.description}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC;EAChC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxC,IAAIa,YAAY,GAAG,CAAC;EAEpBd,SAAS,CAAC,MAAM;IACZ,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3BJ,YAAY,CAAC,IAAI,CAAC;MAClB,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC;QAC1C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCV,QAAQ,CAACS,IAAI,CAAC;QACdJ,YAAY,EAAE;MAClB,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZC,QAAQ,CAACD,KAAK,CAACQ,OAAO,CAAC;MAC3B,CAAC,SAAS;QACNT,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ,CAAC;IACDI,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,IAAIG,SAAS,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C,IAAIb,KAAK,EAAE,oBAAOR,OAAA;IAAAiB,QAAA,GAAK,SAAO,EAACT,KAAK;EAAA;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE3C,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,kHAAkH;IAAAL,QAAA,gBAC7HjB,OAAA;MAAIsB,SAAS,EAAC,sBAAsB;MAAAL,QAAA,GAAC,gBAAc,EAACd,QAAQ;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClErB,OAAA;MAAAiB,QAAA,EACKb,KAAK,CAACmB,GAAG,CAACC,IAAI,iBACXxB,OAAA;QAAIsB,SAAS,EAAC,YAAY;QAAAL,QAAA,GAAe,GAAC,EAACP,YAAY,EAAC,GAAC,EAACc,IAAI,CAACC,KAAK,EAAC,IAAE,EAACD,IAAI,CAACE,WAAW;MAAA,GAAxDF,IAAI,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAsD,CAChG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACnB,EAAA,CArCQD,QAAQ;EAAA,QACQH,SAAS;AAAA;AAAA8B,EAAA,GADzB3B,QAAQ;AAuCjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}